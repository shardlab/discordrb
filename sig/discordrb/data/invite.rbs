module Discordrb
  # A channel referenced by an invite. It has less data than regular channels, so it's a separate class
  class InviteChannel
    include IDObject

    # @return [String] this channel's name.
    attr_reader name: untyped

    # @return [Integer] this channel's type (0: text, 1: private, 2: voice, 3: group).
    attr_reader type: untyped

    # @!visibility private
    def initialize: (untyped data, untyped `bot`) -> void
  end

  # A server referenced to by an invite
  class InviteServer
    include IDObject

    # @return [String] this server's name.
    attr_reader name: untyped

    # @return [String, nil] the hash of the server's invite splash screen (for partnered servers) or nil if none is
    #   present
    attr_reader splash_hash: untyped

    # @!visibility private
    def initialize: (untyped data, untyped `bot`) -> void
  end

  # A Discord invite to a channel
  class Invite
    # @return [InviteChannel, Channel] the channel this invite references.
    attr_reader channel: untyped

    # @return [InviteServer, Server] the server this invite references.
    attr_reader server: untyped

    # @return [Integer] the amount of uses left on this invite.
    attr_reader uses: untyped

    alias max_uses uses

    # @return [User, nil] the user that made this invite. May also be nil if the user can't be determined.
    attr_reader inviter: untyped

    alias user inviter

    # @return [true, false] whether or not this invite grants temporary membership. If someone joins a server with this invite, they will be removed from the server when they go offline unless they've received a role.
    attr_reader temporary: untyped

    alias temporary? temporary

    # @return [true, false] whether this invite is still valid.
    attr_reader revoked: untyped

    alias revoked? revoked

    # @return [String] this invite's code
    attr_reader code: untyped

    # @return [Integer, nil] the amount of members in the server. Will be nil if it has not been resolved.
    attr_reader member_count: untyped

    alias user_count member_count

    # @return [Integer, nil] the amount of online members in the server. Will be nil if it has not been resolved.
    attr_reader online_member_count: untyped

    alias online_user_count online_member_count

    # @return [Integer, nil] the invites max age before it expires, or nil if it's unknown. If the max age is 0, the invite will never expire unless it's deleted.
    attr_reader max_age: untyped

    # @return [Time, nil] when this invite was created, or nil if it's unknown
    attr_reader created_at: untyped

    # @!visibility private
    def initialize: (untyped data, untyped `bot`) -> void

    # Code based comparison
    def ==: (untyped other) -> untyped

    # Deletes this invite
    # @param reason [String] The reason the invite is being deleted.
    def delete: (?untyped? reason) -> untyped

    alias revoke delete

    # The inspect method is overwritten to give more useful output
    def inspect: () -> ::String

    # Creates an invite URL.
    def url: () -> ::String
  end
end
